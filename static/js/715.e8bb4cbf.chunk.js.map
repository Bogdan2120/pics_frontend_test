{"version":3,"file":"static/js/715.e8bb4cbf.chunk.js","mappings":"mNAAaA,EAAmB,SAAAC,GAAK,OAAIA,EAAMC,QAAV,ECCrC,GAAgB,kBAAoB,mCAAmC,WAAa,4BAA4B,SAAW,0BAA0B,SAAW,0BAA0B,OAAS,yB,SCU7LC,EAAkB,CACtB,UACA,UACA,UACA,UACA,UACA,UACA,WAiDF,EA9CgB,WACd,IAAQD,GAAaE,EAAAA,EAAAA,IAAYJ,GAAzBE,SAEFG,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACgB,IAApBL,EAASM,QACXH,GAASI,EAAAA,EAAAA,MAEZ,GAAE,CAACJ,EAAUH,IAKd,OACE,eAAIQ,UAAWC,EAAAA,kBAAf,SACGT,EAASU,KAAI,YAAyB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACzB,OACE,gBAAaL,UAAWC,EAAAA,WAAxB,WACE,iBAAKD,UAAWC,EAAAA,SAAhB,WACE,gBAAKD,UAAWC,EAAAA,SAAhB,UACE,SAAC,IAAD,CACEK,KAAMD,EAAKE,SACXC,KAAM,GACNC,OAAQ,GACRC,MAAM,OACNC,iBAAkBlB,OAGtB,cAAGO,UAAWC,EAAAA,SAAd,SAAgCI,EAAKE,eAEvC,cAAGP,UAAWC,EAAAA,YAAd,SAAmCG,KACnC,mBACEQ,KAAK,SACLZ,UAAWC,EAAAA,OACXY,QAAS,kBAxBC,SAAAV,GACpBR,GAASmB,EAAAA,EAAAA,IAAmBX,GAC7B,CAsB0BY,CAAcZ,EAApB,EAHX,iBAdOA,EAuBZ,KAGN,ECjEYa,EAAgB,SAACC,EAAKC,GACjC,IAAIC,EAAOF,EAAMG,KAAKC,UAAYH,EAAM,EAAID,GAC5C,OAAOG,KAAKE,MAAMH,EACnB,ECFD,EAAgC,oCAAhC,EAAgF,gCAAhF,EAA4H,gCCgD5H,EAtCqB,WACnB,IAAQI,GAAgB7B,EAAAA,EAAAA,IAAYJ,GAA5BiC,YACF5B,GAAWC,EAAAA,EAAAA,MAmBjB,OACE,+BACE,kBAAMI,UAAWC,EAAsBuB,SAfvB,SAAAC,GAClBA,EAAEC,iBAEF,IAAMC,EAAa,CACjBvB,KAAMmB,EACNK,OAAQZ,EAAc,EAAG,KACzBa,OAAQb,EAAc,EAAG,MAG3BrB,GAASmC,EAAAA,EAAAA,IAAcH,IAEvBhC,GAASoC,EAAAA,EAAAA,IAAmB,IAC7B,EAGG,WACE,kBACEnB,KAAK,OACLoB,MAAOT,EACPvB,UAAWC,EACXgC,SAxBW,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACpBvC,GAASoC,EAAAA,EAAAA,IAAmBG,EAAOF,OACpC,KAwBK,mBAAQpB,KAAK,SAASZ,UAAWC,EAAjC,wBAMP,EC9CD,EAAiC,iCCajC,EATgB,WACd,OACE,qBAASD,UAAWC,EAApB,WACE,SAAC,EAAD,KACA,SAAC,EAAD,MAGL,C","sources":["redux/comments/comments-selectors.js","webpack://pics_fronend/./src/components/Comment/comment.module.scss?12f2","components/Comment/Comment.jsx","utils/randomInteger.js","webpack://pics_fronend/./src/components/FormComments/formComments.module.scss?d25c","components/FormComments/FormComments.jsx","webpack://pics_fronend/./src/pages/Comments/comments.module.scss?aa6d","pages/Comments/Comments.jsx"],"sourcesContent":["export const getCommentsStore = store => store.comments;\n","// extracted by mini-css-extract-plugin\nexport default {\"contsinerComments\":\"comment_contsinerComments__8eW9M\",\"bodyComent\":\"comment_bodyComent__tjaVw\",\"bodyUser\":\"comment_bodyUser__fyGfv\",\"nickUser\":\"comment_nickUser__KduCB\",\"btnDel\":\"comment_btnDel__HriEK\"};","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport LetteredAvatar from 'react-lettered-avatar';\n\nimport {\n  fetchComments,\n  fetchDeleteComment,\n} from 'redux/comments/comments-operations.js';\nimport { getCommentsStore } from 'redux/comments/comments-selectors';\n\nimport styles from './comment.module.scss';\nconst arrayWithColors = [\n  '#2ecc71',\n  '#3498db',\n  '#8e44ad',\n  '#e67e22',\n  '#e74c3c',\n  '#1abc9c',\n  '#2c3e50',\n];\n\nconst Comment = () => {\n  const { comments } = useSelector(getCommentsStore);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (comments.length === 0) {\n      dispatch(fetchComments());\n    }\n  }, [dispatch, comments]);\n\n  const deleteComment = id => {\n    dispatch(fetchDeleteComment(id));\n  };\n  return (\n    <ul className={styles.contsinerComments}>\n      {comments.map(({ id, body, user }) => {\n        return (\n          <li key={id} className={styles.bodyComent}>\n            <div className={styles.bodyUser}>\n              <div className={styles.iconUser}>\n                <LetteredAvatar\n                  name={user.username}\n                  size={40}\n                  radius={20}\n                  color=\"#fff\"\n                  backgroundColors={arrayWithColors}\n                />\n              </div>\n              <p className={styles.nickUser}>{user.username}</p>\n            </div>\n            <p className={styles.commentText}>{body}</p>\n            <button\n              type=\"button\"\n              className={styles.btnDel}\n              onClick={() => deleteComment(id)}\n            >\n              x\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nexport default Comment;\n","export const randomInteger = (min, max) => {\n  let rand = min + Math.random() * (max + 1 - min);\n  return Math.floor(rand);\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"formCommensts\":\"formComments_formCommensts__9ke8J\",\"inputText\":\"formComments_inputText__cBxBY\",\"btnSybmit\":\"formComments_btnSybmit__NCwj7\"};","import { useSelector, useDispatch } from 'react-redux';\nimport { randomInteger } from 'utils';\n\nimport {\n  writeCommentInForm,\n  addNewComment,\n} from 'redux/comments/comments-operations';\nimport { getCommentsStore } from 'redux/comments/comments-selectors';\n\nimport styles from './formComments.module.scss';\n\nconst FormComments = () => {\n  const { commentText } = useSelector(getCommentsStore);\n  const dispatch = useDispatch();\n\n  const chengeText = ({ target }) => {\n    dispatch(writeCommentInForm(target.value));\n  };\n\n  const submiteForm = e => {\n    e.preventDefault();\n\n    const newComment = {\n      body: commentText,\n      postId: randomInteger(1, 100),\n      userId: randomInteger(1, 100),\n    };\n\n    dispatch(addNewComment(newComment));\n\n    dispatch(writeCommentInForm(''));\n  };\n  return (\n    <>\n      <form className={styles.formCommensts} onSubmit={submiteForm}>\n        <input\n          type=\"text\"\n          value={commentText}\n          className={styles.inputText}\n          onChange={chengeText}\n        />\n        <button type=\"submit\" className={styles.btnSybmit}>\n          Submit\n        </button>\n      </form>\n    </>\n  );\n};\n\nexport default FormComments;\n","// extracted by mini-css-extract-plugin\nexport default {\"comentsSection\":\"comments_comentsSection__OxtPv\"};","import Comment from 'components/Comment/Comment';\nimport FormComments from 'components/FormComments/FormComments';\n\nimport styles from './comments.module.scss';\n\nconst Coments = () => {\n  return (\n    <section className={styles.comentsSection}>\n      <Comment />\n      <FormComments />\n    </section>\n  );\n};\n\nexport default Coments;\n"],"names":["getCommentsStore","store","comments","arrayWithColors","useSelector","dispatch","useDispatch","useEffect","length","fetchComments","className","styles","map","id","body","user","name","username","size","radius","color","backgroundColors","type","onClick","fetchDeleteComment","deleteComment","randomInteger","min","max","rand","Math","random","floor","commentText","onSubmit","e","preventDefault","newComment","postId","userId","addNewComment","writeCommentInForm","value","onChange","target"],"sourceRoot":""}